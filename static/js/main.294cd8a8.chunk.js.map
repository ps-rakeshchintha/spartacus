{"version":3,"sources":["ImageCropper/Options/AspectRatio/AspectRatio.js","ImageCropper/Options/Transform/InputSlider.js","ImageCropper/Options/Transform/Transform.js","ImageCropper/Options/Zoom/Zoom.js","ImageCropper/Options/Options.js","ImageCropper/Cropper/Cropper.js","ImageCropper/FileUpload/FileUpload.js","ImageCropper/ImageCropper.js","Router.js","serviceWorker.js","index.js"],"names":["AspectRatio","setAspectRatio","aspectRatio","props","onAspectRatioChange","getSelectedState","btnValue","classes","buttonSelected","this","className","root","noValidate","autoComplete","Typography","variant","subHeading","gutterBottom","Button","iconButton","undefined","size","onClick","fontSize","React","Component","withStyles","theme","display","flexWrap","padding","spacing","width","color","palette","primary","main","textAlign","minWidth","InputSlider","handleSliderChange","event","newValue","setValue","handleInputChange","target","value","Number","handleBlur","min","max","setRotateToDegree","Grid","container","alignItems","item","xs","Slider","onChange","aria-labelledby","Input","input","margin","onBlur","inputProps","step","type","Transform","minDegree","maxDegree","flipHorizontalClick","toggleFlipHorizontal","flipVerticalClick","toggleFlipVertical","rotateStep","deg","rotateToDegree","onSubmit","e","preventDefault","centerAlign","Tooltip","title","IconButton","flippedVertical","transform","common","black","Zoom","zoomOut","zoomIn","Options","handleAspectRatioChange","Fragment","cropperOptions","Divider","flipHorizontal","flipVertical","Cropper","cropper","zoom","cropImage","dataURL","getCroppedCanvas","imageSmoothingEnabled","imageSmoothingQuality","toDataURL","imageType","link","document","createElement","href","download","imageName","body","append","click","remove","image","getElementById","imageCropper","viewMode","zoomOnTouch","zoomOnWheel","crop","prevProps","prevSate","rotateTo","moveTo","scaleX","scaleY","id","src","imageUrl","alt","FileUpload","onFileUpload","reader","file","files","done","url","handleFileUpload","name","length","URL","createObjectURL","FileReader","onload","result","readAsDataURL","heading1","heading2","accept","htmlFor","component","button","startIcon","text","secondary","ImageCropper","state","mobileOpen","handleDrawerToggle","setState","refs","drawer","Hidden","smUp","implementation","Drawer","anchor","open","onClose","paper","drawerPaper","ModalProps","keepMounted","toolbar","xsDown","cropBtn","content","aria-label","edge","menuButton","ref","breakpoints","up","flexShrink","appBar","marginLeft","marginRight","position","mixins","flexGrow","marginTop","App","path","render","location","AppBar","Tabs","tabs","pathname","Tab","label","Link","to","minHeight","paddingTop","paddingLeft","zIndex","Boolean","window","hostname","match","ReactDOM","CssBaseline","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.294cd8a8.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Crop169Icon from '@material-ui/icons/Crop169';\r\nimport Crop32Icon from '@material-ui/icons/Crop32';\r\nimport Crop54Icon from '@material-ui/icons/Crop54';\r\nimport Crop75Icon from '@material-ui/icons/Crop75';\r\nimport CropSquareIcon from '@material-ui/icons/CropSquare';\r\nimport CropFreeIcon from '@material-ui/icons/CropFree';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        display: \"flex\",\r\n        flexWrap: \"wrap\",\r\n        padding: theme.spacing(1),\r\n    },\r\n    iconButton: {\r\n        width: 74\r\n    },\r\n    buttonSelected: {\r\n        color: theme.palette.primary.main\r\n    },\r\n    subHeading: {\r\n        textAlign: \"center\",\r\n        minWidth: \"100%\"\r\n    }\r\n});\r\n\r\nclass AspectRatio extends React.Component {\r\n    setAspectRatio = (aspectRatio) => {\r\n        this.props.onAspectRatioChange(aspectRatio);\r\n    }\r\n    getSelectedState = (btnValue) => {\r\n        if (btnValue === this.props.aspectRatio) {\r\n            return this.props.classes.buttonSelected\r\n        }\r\n    }\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <form className={classes.root} noValidate autoComplete=\"off\">\r\n                <Typography variant=\"subtitle1\" className={classes.subHeading} gutterBottom>Aspect Ratio</Typography>\r\n                <Button className={`${classes.iconButton} ${this.getSelectedState(undefined)}`} size=\"small\" onClick={() => this.setAspectRatio(undefined)}>\r\n                    <CropFreeIcon fontSize=\"large\" />\r\n                    Free\r\n                </Button>\r\n                <Button className={`${classes.iconButton} ${this.getSelectedState(16 / 9)}`} size=\"small\" onClick={() => this.setAspectRatio(16 / 9)}>\r\n                    <Crop169Icon fontSize=\"large\" />\r\n                    16:9\r\n                </Button>\r\n                <Button className={`${classes.iconButton} ${this.getSelectedState(3 / 2)}`} size=\"small\" onClick={() => this.setAspectRatio(3 / 2)}>\r\n                    <Crop32Icon fontSize=\"large\" />\r\n                    3:2\r\n                </Button>\r\n                <Button className={`${classes.iconButton} ${this.getSelectedState(5 / 4)}`} size=\"small\" onClick={() => this.setAspectRatio(5 / 4)}>\r\n                    <Crop54Icon fontSize=\"large\" />\r\n                    5:4\r\n                </Button>\r\n                <Button className={`${classes.iconButton} ${this.getSelectedState(7 / 5)}`} size=\"small\" onClick={() => this.setAspectRatio(7 / 5)}>\r\n                    <Crop75Icon fontSize=\"large\" />\r\n                    7:5\r\n                </Button>\r\n                <Button className={`${classes.iconButton} ${this.getSelectedState(1)}`} size=\"small\" onClick={() => this.setAspectRatio(1)}>\r\n                    <CropSquareIcon fontSize=\"large\" />\r\n                    1:1\r\n                </Button>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(AspectRatio);","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Input from '@material-ui/core/Input';\r\nimport CropRotateIcon from '@material-ui/icons/CropRotate';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  input: {\r\n    width: 50,\r\n  },\r\n});\r\n\r\nclass InputSlider extends React.Component {\r\n  handleSliderChange = (event, newValue) => {\r\n    this.setValue(newValue);\r\n  };\r\n\r\n  handleInputChange = event => {\r\n    this.setValue(event.target.value === '' ? '' : Number(event.target.value));\r\n  };\r\n\r\n  handleBlur = () => {\r\n    if (this.props.value < this.props.min) {\r\n      this.setValue(this.props.min);\r\n    } else if (this.props.value > this.props.max) {\r\n      this.setValue(this.props.max);\r\n    }\r\n  };\r\n\r\n  setValue = (value) => {\r\n    this.props.setRotateToDegree(value);\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <div className={classes.root} >\r\n        <Grid container spacing={2} alignItems=\"center\">\r\n          <Grid item>\r\n            <CropRotateIcon />\r\n          </Grid>\r\n          <Grid item xs>\r\n            <Slider\r\n              value={typeof this.props.value === 'number' ? this.props.value : 0}\r\n              min={this.props.min}\r\n              max={this.props.max}\r\n              onChange={this.handleSliderChange}\r\n              aria-labelledby=\"input-slider\"\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <Input\r\n              className={classes.input}\r\n              value={this.props.value}\r\n              margin=\"dense\"\r\n              onChange={this.handleInputChange}\r\n              onBlur={this.handleBlur}\r\n              inputProps={{\r\n                step: this.props.step,\r\n                min: this.props.min,\r\n                max: this.props.max,\r\n                type: 'number',\r\n                'aria-labelledby': 'input-slider',\r\n              }}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(InputSlider);\r\n","import React from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FlipIcon from '@material-ui/icons/Flip';\r\nimport RotateLeftIcon from '@material-ui/icons/RotateLeft';\r\nimport RotateRightIcon from '@material-ui/icons/RotateRight';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nimport InputSlider from './InputSlider';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        display: \"flex\",\r\n        flexWrap: \"wrap\",\r\n        padding: theme.spacing(1),\r\n    },\r\n    centerAlign: {\r\n        textAlign: \"center\",\r\n        minWidth: \"100%\"\r\n    },\r\n    flippedVertical: {\r\n        transform: \"rotate(90deg)\"\r\n    },\r\n    iconButton: {\r\n        color: theme.palette.common.black\r\n    }\r\n});\r\n\r\nclass Transform extends React.Component {\r\n    minDegree = -360;\r\n    maxDegree = 360\r\n    flipHorizontalClick = () => {\r\n        this.props.toggleFlipHorizontal();\r\n    }\r\n    flipVerticalClick = () => {\r\n        this.props.toggleFlipVertical();\r\n    }\r\n    rotateStep = (step) => {\r\n        let deg = this.props.rotateToDegree + step;\r\n        if(deg >= this.maxDegree){\r\n            deg = 0;\r\n        } else if(deg <= this.minDegree ){\r\n            deg = 0;\r\n        }\r\n        this.props.setRotateToDegree(deg);\r\n    }\r\n    setRotateToDegree = (deg) => {\r\n        this.props.setRotateToDegree(deg);\r\n    }\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <form className={classes.root} noValidate autoComplete=\"off\" onSubmit={(e) => e.preventDefault()}>\r\n                <Typography variant=\"subtitle1\" className={classes.centerAlign} gutterBottom>Transform</Typography>\r\n                <Typography>Flip:</Typography>\r\n                <div className={classes.centerAlign} >\r\n                    <Tooltip title=\"Flip Horizontal\">\r\n                        <IconButton onClick={() => this.flipHorizontalClick()} className={classes.iconButton}>\r\n                            <FlipIcon fontSize=\"large\" />\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                    <Tooltip title=\"Flip Vertical\">\r\n                        <IconButton onClick={() => this.flipVerticalClick()} className={classes.iconButton}>\r\n                            <FlipIcon className={classes.flippedVertical} fontSize=\"large\" />\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                </div>\r\n                <Typography>Rotate:</Typography>\r\n                <div className={classes.centerAlign} >\r\n                    <Tooltip title=\"Rotate Left\">\r\n                        <IconButton onClick={() => this.rotateStep(-90)} className={classes.iconButton}>\r\n                            <RotateLeftIcon fontSize=\"large\" />\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                    <Tooltip title=\"Rotate Right\">\r\n                        <IconButton onClick={() => this.rotateStep(90)} className={classes.iconButton}>\r\n                            <RotateRightIcon fontSize=\"large\" />\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                </div>\r\n                <InputSlider min={this.minDegree} max={this.maxDegree} step={10} value={this.props.rotateToDegree} setRotateToDegree={this.setRotateToDegree}/>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(Transform);","import React from \"react\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ZoomInIcon from '@material-ui/icons/ZoomIn';\r\nimport ZoomOutIcon from '@material-ui/icons/ZoomOut';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        display: \"flex\",\r\n        flexWrap: \"wrap\",\r\n        padding: theme.spacing(1),\r\n    },\r\n    centerAlign: {\r\n        textAlign: \"center\",\r\n        minWidth: \"100%\"\r\n    },\r\n    flippedVertical: {\r\n        transform: \"rotate(90deg)\"\r\n    },\r\n    iconButton: {\r\n        color: theme.palette.common.black\r\n    }\r\n});\r\n\r\nclass Zoom extends React.Component {\r\n    zoomOut = () => {\r\n        this.props.zoomOut();\r\n    }  \r\n    zoomIn = () => {\r\n        this.props.zoomIn();\r\n    }\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <form className={classes.root} noValidate autoComplete=\"off\" onSubmit={(e) => e.preventDefault()}>\r\n                <Typography variant=\"subtitle1\" className={classes.centerAlign} gutterBottom>Zoom</Typography>\r\n                <div className={classes.centerAlign} >\r\n                    <Tooltip title=\"Zoom Out\">\r\n                        <IconButton onClick={() => this.zoomOut()} className={classes.iconButton}>\r\n                            <ZoomOutIcon fontSize=\"large\" />\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                    <Tooltip title=\"Zoom In\">\r\n                        <IconButton onClick={() => this.zoomIn()} className={classes.iconButton}>\r\n                            <ZoomInIcon fontSize=\"large\" />\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                </div>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(Zoom);","import React from \"react\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\n\r\nimport AspectRatio from \"./AspectRatio/AspectRatio\";\r\nimport Transform from \"./Transform/Transform\";\r\nimport Zoom from \"./Zoom/Zoom\";\r\n\r\nclass Options extends React.Component {\r\n    handleAspectRatioChange = (aspectRatio) => {\r\n        this.props.onAspectRatioChange(aspectRatio);\r\n    }\r\n    toggleFlipHorizontal = () => {\r\n        this.props.toggleFlipHorizontal();\r\n    }\r\n    toggleFlipVertical = () => {\r\n        this.props.toggleFlipVertical();\r\n    }\r\n    setRotateToDegree = (deg) => {\r\n        this.props.setRotateToDegree(deg);\r\n    }\r\n    zoomOut = () => {\r\n        this.props.zoomOut();\r\n    }\r\n    zoomIn = () => {\r\n        this.props.zoomIn();\r\n    }\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <AspectRatio\r\n                    aspectRatio={this.props.cropperOptions.aspectRatio}\r\n                    onAspectRatioChange={this.handleAspectRatioChange} />\r\n                <Divider />\r\n                <Transform\r\n                    flipHorizontal={this.props.cropperOptions.flipHorizontal}\r\n                    flipVertical={this.props.cropperOptions.flipVertical}\r\n                    rotateToDegree={this.props.cropperOptions.rotateToDegree}\r\n                    toggleFlipHorizontal={this.toggleFlipHorizontal}\r\n                    toggleFlipVertical={this.toggleFlipVertical}\r\n                    setRotateToDegree={this.setRotateToDegree}\r\n                />\r\n\r\n                <Divider />\r\n                <Zoom\r\n                    zoomIn={this.zoomIn}\r\n                    zoomOut={this.zoomOut}\r\n                />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Options","import React from \"react\";\r\nimport imageCropper from 'cropperjs';\r\n//import OpenWithIcon from '@material-ui/icons/OpenWith';\r\n//import CropIcon from '@material-ui/icons/Crop';\r\n//import Typography from '@material-ui/core/Typography';\r\n\r\nimport './Cropper.css';\r\nimport 'cropperjs/dist/cropper.min.css';\r\n\r\nclass Cropper extends React.Component {\r\n    cropper = undefined;\r\n    componentDidMount() {\r\n        const image = document.getElementById('cropper-img');\r\n        let that = this;\r\n        this.cropper = new imageCropper(image, {\r\n            aspectRatio: that.props.aspectRatio,\r\n            viewMode: 1,\r\n            zoomOnTouch: false,\r\n            zoomOnWheel: false,\r\n            crop(event) {\r\n                //console.log(\"x:\" + event.detail.x);\r\n                //console.log(\"y:\" + event.detail.y);\r\n                //console.log(\"width:\" + event.detail.width);\r\n                //console.log(\"height:\" + event.detail.height);\r\n                //console.log(\"rotate:\" + event.detail.rotate);\r\n                //console.log(\"scaleX\" + event.detail.scaleX);\r\n                //console.log(\"scaleY\" + event.detail.scaleY);\r\n                //that.props.updateCropperEventDetails(event.detail)\r\n            },\r\n        });\r\n    }\r\n    componentDidUpdate(prevProps, prevSate) {\r\n        if (prevProps.rotateToDegree !== this.props.rotateToDegree) {\r\n            this.cropper.rotateTo(this.props.rotateToDegree);\r\n            this.cropper.moveTo(0, 0)\r\n        }\r\n        if (prevProps.aspectRatio !== this.props.aspectRatio)\r\n            this.cropper.setAspectRatio(this.props.aspectRatio);\r\n        if (prevProps.flipHorizontal !== this.props.flipHorizontal)\r\n            this.cropper.scaleX(this.props.flipHorizontal ? -1 : 1);\r\n        if (prevProps.flipVertical !== this.props.flipVertical)\r\n            this.cropper.scaleY(this.props.flipVertical ? -1 : 1);\r\n    }\r\n    zoomIn = () => {\r\n        this.cropper.zoom(0.1);\r\n    }\r\n    zoomOut = () => {\r\n        this.cropper.zoom(-0.1);\r\n    }\r\n    cropImage = () => {\r\n        const canvas = this.cropper.getCroppedCanvas({\r\n            imageSmoothingEnabled: false,\r\n            imageSmoothingQuality: 'high'\r\n        });\r\n        const dataURL = canvas.toDataURL(this.props.imageType);\r\n\r\n        let link = document.createElement(\"a\");\r\n        link.href = dataURL;\r\n        link.download = \"modified_\" + this.props.imageName;\r\n        document.body.append(link);\r\n        link.click();\r\n        link.remove();\r\n    }\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"cropper-box\">\r\n                    <img id=\"cropper-img\" src={this.props.imageUrl} alt=\"Cropper\" />\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default (Cropper);\r\n\r\n/*\r\n<div className=\"cropper-footer\">\r\n<span>\r\n    <OpenWithIcon fontSize=\"small\" />\r\n    <Typography variant=\"subtitle1\" display=\"inline\" className=\"position-details\">\r\n        {Math.floor(this.state.cropperDetails.x)}, {Math.floor(this.state.cropperDetails.y)}px\r\n    </Typography>\r\n</span>\r\n<span>\r\n    <CropIcon fontSize=\"small\" />\r\n    <Typography variant=\"subtitle1\" display=\"inline\" className=\"position-details\">\r\n        {Math.floor(this.state.cropperDetails.width)} x {Math.floor(this.state.cropperDetails.height)}px\r\n    </Typography>\r\n</span>\r\n</div> */","import React from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    input: {\r\n        display: 'none',\r\n    },\r\n    heading1:{\r\n        fontSize: \"3rem\"\r\n    },\r\n    heading2:{\r\n        fontSize: \"1.5rem\",\r\n        color: theme.palette.text.secondary\r\n    }\r\n});\r\n\r\nclass FileUpload extends React.Component {\r\n\r\n    onFileUpload = (e) => {\r\n        var files = e.target.files;\r\n        var done = (url) => {\r\n            this.props.handleFileUpload(url, file.type, file.name);\r\n        };\r\n        var reader;\r\n        var file;\r\n\r\n        if (files && files.length > 0) {\r\n            file = files[0];\r\n\r\n            if (URL) {\r\n                done(URL.createObjectURL(file));\r\n            } else if (FileReader) {\r\n                reader = new FileReader();\r\n                reader.onload = function (e) {\r\n                    done(reader.result);\r\n                };\r\n                reader.readAsDataURL(file);\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <React.Fragment>\r\n                <Typography className={classes.heading1} gutterBottom fontSize=\"1rem\" variant=\"h1\">\r\n                    Crop Any Image For Free\r\n                </Typography>\r\n                <Typography className={classes.heading2} gutterBottom variant=\"h2\">\r\n                    Load and Crop <b>JPG</b>, <b>PNG</b> or <b>GIF</b> by simply selecting the area you want.\r\n                </Typography>\r\n                <input\r\n                    accept=\"image/*\"\r\n                    className={classes.input}\r\n                    id=\"image-upload-btn\"\r\n                    type=\"file\"\r\n                    onChange={this.onFileUpload}\r\n                />\r\n                <label htmlFor=\"image-upload-btn\">\r\n                    <Button\r\n                        component=\"span\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        size=\"large\"\r\n                        className={classes.button}\r\n                        startIcon={<CloudUploadIcon />}\r\n                    >\r\n                        Upload\r\n                        </Button>\r\n                </label>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(FileUpload);","import React from \"react\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport Options from \"./Options/Options\";\r\nimport Cropper from \"./Cropper/Cropper\";\r\nimport FileUpload from \"./FileUpload/FileUpload\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        display: \"flex\"\r\n    },\r\n    drawer: {\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            width: drawerWidth,\r\n            flexShrink: 0\r\n        }\r\n    },\r\n    appBar: {\r\n        marginLeft: drawerWidth,\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            width: `calc(100% - ${drawerWidth}px)`\r\n        }\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n        position: \"absolute\",\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            display: \"none\"\r\n        }\r\n    },\r\n    toolbar: theme.mixins.toolbar,\r\n    drawerPaper: {\r\n        width: drawerWidth\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(1),\r\n        textAlign: \"center\",\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            padding: theme.spacing(3),\r\n        }\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    input: {\r\n        display: 'none',\r\n    },\r\n    cropBtn: {\r\n        margin: \"0 40px\"\r\n    },\r\n    cropper: {\r\n        marginTop: 50\r\n    }\r\n});\r\n\r\nclass ImageCropper extends React.Component {\r\n    state = {\r\n        mobileOpen: false,\r\n        cropperOptions: {\r\n            aspectRatio: undefined,\r\n            flipHorizontal: false,\r\n            flipVertical: false,\r\n            rotateToDegree: 0\r\n        },\r\n        imageName: undefined,\r\n        imageType: undefined,\r\n        imageUrl: undefined\r\n    }\r\n    handleDrawerToggle = () => {\r\n        this.setState({\r\n            mobileOpen: !this.state.mobileOpen\r\n        })\r\n    }\r\n    handleFileUpload = (imageUrl, imageType, imageName) => {\r\n        this.setState({\r\n            imageUrl: imageUrl,\r\n            imageName: imageName,\r\n            imageType: imageType\r\n        })\r\n    }\r\n    handleAspectRatioChange = (aspectRatio) => {\r\n        let cropperOptions = this.state.cropperOptions;\r\n        cropperOptions.aspectRatio = aspectRatio;\r\n        this.setState({\r\n            cropperOptions: cropperOptions\r\n        })\r\n    }\r\n    toggleFlipHorizontal = () => {\r\n        let cropperOptions = this.state.cropperOptions;\r\n        cropperOptions.flipHorizontal = !cropperOptions.flipHorizontal;\r\n        this.setState({\r\n            cropperOptions: cropperOptions\r\n        })\r\n    }\r\n    toggleFlipVertical = () => {\r\n        let cropperOptions = this.state.cropperOptions;\r\n        cropperOptions.flipVertical = !cropperOptions.flipVertical;\r\n        this.setState({\r\n            cropperOptions: cropperOptions\r\n        })\r\n    }\r\n    setRotateToDegree = (deg) => {\r\n        let cropperOptions = this.state.cropperOptions;\r\n        cropperOptions.rotateToDegree = deg;\r\n        this.setState({\r\n            cropperOptions: cropperOptions\r\n        })\r\n    }\r\n    zoomOut = () => {\r\n        this.refs.cropper.zoomOut();\r\n    }\r\n    zoomIn = () => {\r\n        this.refs.cropper.zoomIn();\r\n    }\r\n    cropImage = () => {\r\n        this.refs.cropper.cropImage();\r\n    }\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <div className={classes.root}>\r\n                {this.state.imageUrl &&\r\n                    <nav className={classes.drawer}>\r\n                        {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\r\n\r\n                        <Hidden smUp implementation=\"css\">\r\n                            <Drawer\r\n                                variant=\"temporary\"\r\n                                anchor=\"left\"\r\n                                open={this.state.mobileOpen}\r\n                                onClose={this.handleDrawerToggle}\r\n                                classes={{\r\n                                    paper: classes.drawerPaper\r\n                                }}\r\n                                ModalProps={{\r\n                                    keepMounted: true // Better open performance on mobile.\r\n                                }}\r\n                            >\r\n                                <div className={classes.toolbar} />\r\n                                <Options\r\n                                    onAspectRatioChange={this.handleAspectRatioChange}\r\n                                    cropperOptions={this.state.cropperOptions}\r\n                                    toggleFlipHorizontal={this.toggleFlipHorizontal}\r\n                                    toggleFlipVertical={this.toggleFlipVertical}\r\n                                    setRotateToDegree={this.setRotateToDegree}\r\n                                    zoomIn={this.zoomIn}\r\n                                    zoomOut={this.zoomOut} />\r\n\r\n                                <Button\r\n                                    component=\"div\"\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    onClick={() => this.cropImage()}\r\n                                    size=\"large\">\r\n                                    Crop\r\n                                </Button>\r\n                            </Drawer>\r\n                        </Hidden>\r\n                        <Hidden xsDown implementation=\"css\">\r\n                            <Drawer\r\n                                classes={{\r\n                                    paper: classes.drawerPaper\r\n                                }}\r\n                                variant=\"permanent\"\r\n                                open\r\n                            >\r\n                                <div className={classes.toolbar} />\r\n                                <Options\r\n                                    onAspectRatioChange={this.handleAspectRatioChange}\r\n                                    cropperOptions={this.state.cropperOptions}\r\n                                    toggleFlipHorizontal={this.toggleFlipHorizontal}\r\n                                    toggleFlipVertical={this.toggleFlipVertical}\r\n                                    setRotateToDegree={this.setRotateToDegree}\r\n                                    zoomIn={this.zoomIn}\r\n                                    zoomOut={this.zoomOut} />\r\n\r\n                                <Button\r\n                                    className={classes.cropBtn}\r\n                                    component=\"div\"\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    onClick={() => this.cropImage()}\r\n                                    size=\"large\">\r\n                                    Crop\r\n                                </Button>\r\n                            </Drawer>\r\n                        </Hidden>\r\n                    </nav>\r\n                }\r\n                <main className={classes.content}>\r\n                    <div className={classes.toolbar} />\r\n                    {!this.state.imageUrl && <FileUpload handleFileUpload={this.handleFileUpload} />}\r\n                    {\r\n                        this.state.imageUrl &&\r\n                        <React.Fragment>\r\n                            <Hidden smUp>\r\n                                <IconButton\r\n                                    color=\"primary\"\r\n                                    aria-label=\"open drawer\"\r\n                                    edge=\"start\"\r\n                                    onClick={() => this.handleDrawerToggle()}\r\n                                    className={classes.menuButton}\r\n                                >\r\n                                    <MenuIcon />\r\n                                </IconButton>\r\n                            </Hidden>\r\n                            <Cropper className={classes.cropper} ref=\"cropper\"\r\n                                imageUrl={this.state.imageUrl}\r\n                                imageName={this.state.imageName}\r\n                                imageType={this.state.imageType}\r\n                                rotateToDegree={this.state.cropperOptions.rotateToDegree}\r\n                                aspectRatio={this.state.cropperOptions.aspectRatio}\r\n                                flipHorizontal={this.state.cropperOptions.flipHorizontal}\r\n                                flipVertical={this.state.cropperOptions.flipVertical} />\r\n                        </React.Fragment>\r\n                    }\r\n\r\n                </main>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(ImageCropper)","import React, { Fragment } from \"react\";\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link\r\n} from \"react-router-dom\";\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\n\r\n\r\nimport ImageCropper from './ImageCropper/ImageCropper';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        minHeight: 48,\r\n        paddingTop: 8,\r\n        marginLeft: 20,\r\n        width: 180,\r\n        position: \"absolute\"\r\n    },\r\n    tabs: {\r\n        paddingLeft: 220\r\n    },\r\n    appBar: {\r\n        zIndex: 1300\r\n    }\r\n});\r\n\r\nclass App extends React.Component {\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <Router>\r\n                <Route path=\"/\" render={({ location }) => (\r\n                    <Fragment>\r\n                        <AppBar position=\"fixed\" className={classes.appBar}>\r\n                            <Typography variant=\"h6\" className={classes.title}>\r\n                                The Image Toolkit\r\n                            </Typography>\r\n                            <Tabs className={classes.tabs} value={location.pathname}>\r\n                                <Tab value=\"/\" label=\"Crop Image\" component={Link} to=\"/\" />\r\n                            </Tabs>\r\n                        </AppBar>\r\n\r\n                        <Switch>\r\n                            <Route path=\"/\">\r\n                                <ImageCropper />\r\n                            </Route>\r\n                        </Switch>\r\n                    </Fragment>)}\r\n                />\r\n            </Router>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(App)\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport App from \"./Router\";\r\n\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n    <React.Fragment>\r\n        <CssBaseline />\r\n        <App />\r\n    </React.Fragment>\r\n    , document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}